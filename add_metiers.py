"""
Script pour ajouter les nouveaux m√©tiers IT/Cybers√©curit√©
"""

import asyncio
import sys
import os

# Ajouter le r√©pertoire src au path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from database.manager import DatabaseManager
from config.settings import Settings

async def add_new_metiers():
    """Ajoute les nouveaux m√©tiers IT"""
    settings = Settings()
    db_manager = DatabaseManager(settings.database_url)

    await db_manager.initialize()

    # Nouveaux m√©tiers avec beaucoup de mots-cl√©s
    metiers = [
        {
            'nom': 'Technicien Support',
            'description': 'Support technique et assistance utilisateurs',
            'category': 'IT Support',
            'keywords': [
                'technicien support',
                'support technique',
                'support informatique',
                'helpdesk',
                'service desk',
                'assistance informatique',
                'technicien helpdesk',
                'support utilisateurs',
                'support N1',
                'support N2'
            ],
            'code_rome': 'I1401'
        },
        {
            'nom': 'Technicien Helpdesk',
            'description': 'Assistance technique de premier niveau',
            'category': 'IT Support',
            'keywords': [
                'technicien helpdesk',
                'helpdesk',
                'service desk',
                'support N1',
                'assistance technique',
                'technicien assistance',
                'support informatique',
                'hotline',
                'technicien hotline',
                'support client'
            ],
            'code_rome': 'I1401'
        },
        {
            'nom': 'Administrateur Syst√®me et R√©seaux',
            'description': 'Administration et maintenance des syst√®mes et r√©seaux',
            'category': 'Infrastructure',
            'keywords': [
                'administrateur syst√®me',
                'administrateur r√©seau',
                'sysadmin',
                'admin syst√®me',
                'admin r√©seau',
                'ing√©nieur syst√®me',
                'ing√©nieur r√©seau',
                'administrateur infrastructure',
                'technicien syst√®me',
                'technicien r√©seau'
            ],
            'code_rome': 'M1801'
        },
        {
            'nom': 'Analyste SOC',
            'description': 'Analyste en centre op√©rationnel de s√©curit√©',
            'category': 'Cybers√©curit√©',
            'keywords': [
                'analyste soc',
                'soc analyst',
                'analyste cybers√©curit√©',
                'analyste s√©curit√©',
                'cyber analyste',
                'security analyst',
                'analyste cyber',
                'soc',
                'cybers√©curit√©',
                's√©curit√© informatique'
            ],
            'code_rome': 'M1802'
        }
    ]

    print("üîÑ Ajout des nouveaux m√©tiers...")

    for metier_data in metiers:
        # V√©rifier si le m√©tier existe d√©j√†
        existing = await db_manager.get_metier_by_name(metier_data['nom'])

        if existing:
            print(f"‚ö†Ô∏è  {metier_data['nom']} existe d√©j√†, mise √† jour des mots-cl√©s...")
            # Mettre √† jour les mots-cl√©s
            await db_manager.update_metier_keywords(existing.id, metier_data['keywords'])
        else:
            # Cr√©er le nouveau m√©tier
            metier = await db_manager.add_metier(
                nom=metier_data['nom'],
                description=metier_data['description'],
                category=metier_data['category'],
                keywords=metier_data['keywords'],
                code_rome=metier_data['code_rome']
            )
            print(f"‚úÖ {metier_data['nom']} ajout√© (ID: {metier.id})")

    # Mettre √† jour les mots-cl√©s des m√©tiers existants
    print("\nüîÑ Mise √† jour des mots-cl√©s pour les m√©tiers existants...")

    existing_metiers = {
        'D√©veloppeur Web': [
            'd√©veloppeur web',
            'web developer',
            'd√©veloppeur',
            'developer',
            'dev web',
            'full stack',
            'front end',
            'backend',
            'fullstack developer',
            'd√©veloppeur fullstack'
        ],
        'Data Analyst': [
            'data analyst',
            'analyste donn√©es',
            'data',
            'analyst',
            'analyste data',
            'data scientist junior',
            'business analyst',
            'analyste business intelligence',
            'bi analyst',
            'data engineer junior'
        ],
        'Marketing Digital': [
            'marketing digital',
            'digital marketing',
            'community manager',
            'social media',
            'marketing',
            'charg√© marketing',
            'traffic manager',
            'seo',
            'content manager',
            'marketing web'
        ]
    }

    for nom, keywords in existing_metiers.items():
        metier = await db_manager.get_metier_by_name(nom)
        if metier:
            await db_manager.update_metier_keywords(metier.id, keywords)
            print(f"‚úÖ {nom} - mots-cl√©s mis √† jour ({len(keywords)} mots-cl√©s)")

    print("\nüéâ Termin√©!")

    # Afficher tous les m√©tiers
    all_metiers = await db_manager.get_all_metiers()
    print(f"\nüìã Total: {len(all_metiers)} m√©tiers disponibles")
    for m in all_metiers:
        print(f"   - {m.nom} (ID: {m.id})")

if __name__ == '__main__':
    asyncio.run(add_new_metiers())