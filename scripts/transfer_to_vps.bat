@echo off
REM Script de transfert vers VPS Debian 13

echo üì§ Transfert du projet vers VPS Debian 13
echo ==========================================

REM Variables √† configurer
set VPS_IP=45.158.77.193
set VPS_USER=alternance_user
set SSH_KEY_PATH=C:\chemin\vers\votre\cle\ssh

echo.
echo ‚ö†Ô∏è  CONFIGURATION REQUISE:
echo    - Modifiez les variables VPS_IP, VPS_USER et SSH_KEY_PATH dans ce script
echo    - Assurez-vous d'avoir une cl√© SSH configur√©e
echo    - Le VPS doit √™tre accessible via SSH
echo.

REM V√©rifier si les variables sont configur√©es
if "%VPS_IP%"=="VOTRE_IP_VPS" (
    echo ‚ùå Veuillez configurer VPS_IP dans le script
    pause
    exit /b 1
)

if "%VPS_USER%"=="votre_utilisateur" (
    echo ‚ùå Veuillez configurer VPS_USER dans le script
    pause
    exit /b 1
)

echo üîç Test de connexion SSH...
ssh -i "%SSH_KEY_PATH%" %VPS_USER%@%VPS_IP% "echo 'Connexion SSH OK'"

if %errorlevel% neq 0 (
    echo ‚ùå Erreur de connexion SSH
    echo V√©rifiez:
    echo   - L'IP du VPS: %VPS_IP%
    echo   - L'utilisateur: %VPS_USER%
    echo   - La cl√© SSH: %SSH_KEY_PATH%
    pause
    exit /b 1
)

echo ‚úÖ Connexion SSH √©tablie

echo.
echo üì¶ Cr√©ation de l'archive du projet...

REM Cr√©er un tar.gz du projet (exclure les dossiers non n√©cessaires)
tar --exclude=".git" --exclude="__pycache__" --exclude="*.pyc" --exclude="venv" --exclude="logs/*" --exclude="data/*" -czf bot_alternance.tar.gz *

if %errorlevel% neq 0 (
    echo ‚ùå Erreur lors de la cr√©ation de l'archive
    pause
    exit /b 1
)

echo ‚úÖ Archive cr√©√©e: bot_alternance.tar.gz

echo.
echo üì§ Transfert vers le VPS...

REM Transf√©rer l'archive
scp -i "%SSH_KEY_PATH%" bot_alternance.tar.gz %VPS_USER%@%VPS_IP%:~/

if %errorlevel% neq 0 (
    echo ‚ùå Erreur lors du transfert
    pause
    exit /b 1
)

echo ‚úÖ Archive transf√©r√©e

echo.
echo üìã Extraction et pr√©paration sur le VPS...

REM Commandes √† ex√©cuter sur le VPS
ssh -i "%SSH_KEY_PATH%" %VPS_USER%@%VPS_IP% << 'ENDSSH'
echo "üóÇÔ∏è  Extraction du projet..."

# Cr√©er le r√©pertoire s'il n'existe pas
mkdir -p ~/Bot_Alternance

# Sauvegarder l'ancien r√©pertoire si il existe
if [ -d ~/Bot_Alternance_old ]; then
    rm -rf ~/Bot_Alternance_old
fi

if [ -d ~/Bot_Alternance ] && [ "$(ls -A ~/Bot_Alternance)" ]; then
    echo "üì¶ Sauvegarde de l'ancienne version..."
    mv ~/Bot_Alternance ~/Bot_Alternance_old
    mkdir -p ~/Bot_Alternance
fi

# Extraire la nouvelle version
tar -xzf ~/bot_alternance.tar.gz -C ~/Bot_Alternance/

# Supprimer l'archive
rm ~/bot_alternance.tar.gz

echo "‚úÖ Projet extrait dans ~/Bot_Alternance/"

# Si ancienne version existe, copier la config
if [ -f ~/Bot_Alternance_old/.env ]; then
    echo "üìã R√©cup√©ration de l'ancienne configuration..."
    cp ~/Bot_Alternance_old/.env ~/Bot_Alternance/.env
    echo "‚úÖ Configuration r√©cup√©r√©e"
fi

echo "‚úÖ Pr√©paration termin√©e"
ENDSSH

if %errorlevel% neq 0 (
    echo ‚ùå Erreur lors de l'extraction sur le VPS
    pause
    exit /b 1
)

REM Nettoyer l'archive locale
del bot_alternance.tar.gz

echo.
echo üéâ Transfert termin√© avec succ√®s!
echo.
echo üìã Prochaines √©tapes sur le VPS:
echo 1. Connectez-vous: ssh -i "%SSH_KEY_PATH%" %VPS_USER%@%VPS_IP%
echo 2. Allez dans le dossier: cd ~/Bot_Alternance
echo 3. Ex√©cutez le script de d√©ploiement: chmod +x scripts/deploy_vps.sh && ./scripts/deploy_vps.sh
echo 4. Configurez le fichier .env avec vos tokens
echo 5. D√©marrez le bot: ./manage.sh start
echo.

pause